name: End to End Tests (Performance)
on:
  workflow_dispatch:
    inputs:
      automationBranch:
        description: 'Set the branch to use for automation tests'
        required: false
        default: 'develop'
        type: string

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest]
        nodeVersion:
          - 16.15.1
        vscodeVersion:
          - stable
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: ./salesforcedx-vscode
          ref: ${{ github.event.ref }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.nodeVersion }}
          cache: npm
          cache-dependency-path: |
            salesforcedx-vscode/package-lock.json
            salesforcedx-vscode-automation-tests/package-lock.json
      # - name: Clone automation tests
      #   uses: actions/checkout@v3
      #   with:
      #     repository: forcedotcom/salesforcedx-vscode-automation-tests
      #     path: salesforcedx-vscode-automation-tests
      #     ref: ${{ inputs.automationBranch }}
      # - name: Install Extension Dependencies
      #   run: |
      #     npm install &&
      #     npm run compile
      #   working-directory: salesforcedx-vscode
      # - name: Install Test Dependencies
      #   run: |
      #     npm install
      #   working-directory: salesforcedx-vscode-automation-tests
      # - name: Install the SFDX CLI
      #   run: npm install -g sfdx-cli
      # - name: Verify CLI
      #   shell: bash
      #   run: |
      #     set -e
      #     sfdx version
      #     SFDX_CLI_VERSION=$(sfdx version)
      #     if [[ ((`echo $SFDX_CLI_VERSION | grep -c "sfdx-cli/"` > 0))]]
      #     then
      #       echo "sfdx-cli installed -" $SFDX_CLI_VERSION
      #     else
      #       echo "The sfdx-cli installation could not be verified"
      #       exit 1
      #     fi
      - name: Export Yourkit Agent libs
        run: |
          echo "Linux_ARM=./yourkit-distro/linux-arm-32/libyjpagent.so"  >> $GITHUB_ENV &&
          echo "Windows_X86=./yourkit-distro/windows-x86-32/yjpagent.dll" >> $GITHUB_ENV &&
          echo "Linux_X86=./yourkit-distro/linux-x86-32/libyjpagent.so" >> $GITHUB_ENV &&
          echo "Windows_X64=./yourkit-distro/windows-x86-64/yjpagent.dll" >> $GITHUB_ENV &&
          echo "Linux_ARM64=./yourkit-distro/linux-arm-64/libyjpagent.so" >> $GITHUB_ENV &&
          echo "macOs_X64=./yourkit-distro/mac/libyjpagent.dylib" >> $GITHUB_ENV &&
          echo "Windows_ARM64=./yourkit-distro/windows-arm-64/yjpagent.dll" >> $GITHUB_ENV &&
          echo "Linux_X64=./yourkit-distro/linux-x86-64/libyjpagent.so" >> $GITHUB_ENV
      - name: Setup Yourkit Agent
        run: |
          echo "YOURKIT_PROFILER_AGENT=$${{env.RUNNER_OS}}_${{env.RUNNER_ARCH}}=sampling,async_sampling_cpu,app_name=apex_lsp,alloc_object_counting,onexit=memory,onexit=memory,onexit=snapshot,onexit=hprof,dir=./snapshots" >> $GITHUB_ENV
      - name: Create Yourkit Snapshot directory
        run: mkdir snapshots
      - name: Verify YourKit
        run: env
      # - name: Run headless test
      #   uses: coactions/setup-xvfb@b6b4fcfb9f5a895edadc3bc76318fae0ac17c8b3
      #   with:
      #     run: npm run automation-tests
      #     working-directory: salesforcedx-vscode-automation-tests
      #   env:
      #     VSCODE_VERSION: ${{ matrix.vscodeVersion }}
      - uses: actions/upload-artifact@v3
        with:
          name: yourkit-snapshot
          path: snapshots
